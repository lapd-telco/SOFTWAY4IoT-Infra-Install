---
-   hosts: gateway
    become: yes
    vars:
        DIR_INSTALL_SOFTWAY: 'softway4iot'
        GATEWAY_URL_REGISTER: '/v1/'
        FLESK_PORT_MANAGER: 5000
        
        phisical_network_interface: ''
        ip_gateway_manager: '' 
        number_gateway_controll: ''
        fiware_deploy: 'false'

        # variável utilizada na construção da chave de conexão entre gt_manager e gateways
        password_gateways_connection : 'softw4y'
    tasks:
       
      # Validação de variáveis obrigatória
        - fail: 
            msg: "É obrigatório informar o endereço IP do GatewayManager através da variável 'ip_gateway_manager'"
          when: ip_gateway_manager == ''

      # Validação de variáveis obrigatória
        - fail: 
            msg: "É obrigatório informar o nome da interface física de rede do GatewayManager através da variável 'phisical_network_interface'"
          when: phisical_network_interface == ''

      # Validação de variáveis obrigatória
        - fail: 
            msg: "É obrigatório informar um número de controle para o Gateway através da variável 'number_gateway_controll'. Este número deve ser maior que 1 e deve ser único para cada gateway"
          when: number_gateway_controll == ''

      # Validação de variáveis obrigatória
        - fail: 
            msg: "Número de controle para o Gateway deve ser maior que 1"
          when: number_gateway_controll == '1'

      # Remove todos as possíveis referências de uma instalação anterior Softway
        - name : Remove todos as possíveis referências de uma instalação anterior Softway4IoT
          become: yes
          ignore_errors: yes
          shell:  |
              sudo ovs-vsctl del-br br-data
              sudo ovs-vsctl del-br br-control
              sudo apt-get purge -y strongswan
              sudo apt-get auto-remove -y --purge strongswan
              sudo apt-get purge -y openvswitch-switch
              sudo apt-get auto-remove -y --purge openvswitch-switch
              sudo  apt-get purge -y docker-engine docker docker.io docker-ce  
              sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce 
              rm -rf /var/lib/docker /etc/docker
              rm /etc/apparmor.d/docker
              groupdel docker
              rm -rf /var/run/docker.sock
              rm -rf /etc/softway4iot
              rm -r /usr/bin/ovs-docker
              iptables --flush
              iptables --table nat --flush
              iptables --delete-chain
              iptables --table nat --delete-chain

      # Instala os requisitos mínimos de python para o correto funcionamento do Ansible
        - name : Instala os requisitos mínimos de python para o correto funcionamento do Ansible
          become: yes
          shell:  |
              sudo apt update
              apt install python3-pip -y
              apt install python - y
              apt install python-minimal python-simplejson -y
              apt install python-setuptools -y
              apt install python-pip -y

      # Atualização de pacotes do SO via APT
        - name: Atualiza pacotes via APT
          become: true
          apt:
            upgrade: yes
            update_cache: yes
            cache_valid_time: 86400 #One day
      
      # Instala os pré-requisitos para os demais pacotes de software (vpn, openswitch, etc)
        - name: Instala os pré-requisitos para os demais pacotes de software (vpn, openswitch, etc)
          apt:
              name: ['wget', 'strongswan', 'openvswitch-switch', 'python3-pip', 'apt-transport-https','ca-certificates','curl','gnupg2','software-properties-common']
              update_cache: yes

        # Install Pytohn2 apis
        - name: Instala dependências python2 via PIP
          pip:
              name: 
                - setuptools

      # Install Pytohn3 apis
        - name: Instala dependências python3 via PIP
          pip:
              name: 
                - docker
                - PyYAML
              executable: pip3

      # Diretório de configuração Softway
        - name : Construção dos diretórios do Softway
          become: yes
          shell:  |
              sudo rm -r /etc/{{ DIR_INSTALL_SOFTWAY }}
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}/scripts
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}/docker_certs
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}/certs
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}/orch
              sudo mkdir /etc/{{ DIR_INSTALL_SOFTWAY }}/vpn_keys
     
      #Adiciona chaves + repositório Docker
        - name: Adiciona Docker GPG key
          apt_key: url=https://download.docker.com/linux/ubuntu/gpg

        - name: Adiciona Docker APT repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable

      # Instala Docker
        - name: Instala Docker
          apt:
            name: docker-ce
            update_cache: yes
      
      # Download e instalação OVS-DOCKER
        - name : Download e instalação OVS-Docker
          shell:  |
              wget https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker
              sudo mv ovs-docker /usr/bin
              chmod a+rwx /usr/bin/ovs-docker

      # Construção do arquivo para Setup da Rede
        - name: Constroi o arquivo para Setup da Rede
          copy:
            dest: "/etc/{{ DIR_INSTALL_SOFTWAY }}/scripts/initial_setup_network.sh"
            content: |
                #!/bin/bash

                # Interfaces:
                IFACE_LAN_CONTROL=c-control
                IFACE_LAN_DATA=c-data

                iface_wan={{ phisical_network_interface }}

                # Params to configure NAT BR_DATA:
                network_lan_data=10.249.{{ number_gateway_controll }}.1/16

                # Params to configure NAT BR_CONTROL:
                network_lan_control=10.250.{{ number_gateway_controll }}.1/16
                

                # Configure BR_DATA:
                echo "ADD Bridge data"
                ovs-vsctl add-br br-data

                echo "ADD Bridge data internet connection"
                ovs-vsctl add-port br-data $IFACE_LAN_DATA -- set Interface $IFACE_LAN_DATA type=internal
                ifconfig $IFACE_LAN_DATA $network_lan_data up

                echo "1" > /proc/sys/net/ipv4/ip_forward
                iptables -t nat -A POSTROUTING -o $iface_wan -s $network_lan_data ! -d $network_lan_data -j MASQUERADE
                iptables -A FORWARD -d $network_lan_data -i $iface_wan -o $IFACE_LAN_DATA -m state --state RELATED,ESTABLISHED -j ACCEPT
                iptables -A FORWARD -s $network_lan_data -i $IFACE_LAN_DATA -j ACCEPT

                ovs-ofctl add-flow br-data ip,priority=2,actions=DROP
                ovs-ofctl add-flow br-data ip,nw_src=$network_lan_data,nw_dst=$network_lan_data,priority=8,actions=NORMAL

                # Configure BR_CONTROL:
                echo "ADD Bridge control"
                ovs-vsctl add-br br-control

                echo "ADD Bridge control internet connection"
                ovs-vsctl add-port br-control $IFACE_LAN_CONTROL -- set Interface $IFACE_LAN_CONTROL type=internal
                ifconfig $IFACE_LAN_CONTROL $network_lan_control up

                echo "1" > /proc/sys/net/ipv4/ip_forward
                iptables -t nat -A POSTROUTING -o $iface_wan -s $network_lan_control ! -d $network_lan_control -j MASQUERADE
                iptables -A FORWARD -d $network_lan_control -i $iface_wan -o $IFACE_LAN_CONTROL -m state --state RELATED,ESTABLISHED -j ACCEPT
                iptables -A FORWARD -s $network_lan_control -i $IFACE_LAN_CONTROL -j ACCEPT

                ovs-ofctl add-flow br-control ip,priority=2,actions=DROP
                ovs-ofctl add-flow br-control ip,nw_src=$network_lan_control,nw_dst=$network_lan_control,priority=8,actions=NORMAL
      
      # Executa script que realiza o Setup inicial da rede
        - name: Setup inicial da Rede
          shell:  |
              sudo chmod +x /etc/{{ DIR_INSTALL_SOFTWAY }}/scripts/initial_setup_network.sh
              sudo /etc/{{ DIR_INSTALL_SOFTWAY }}/scripts/initial_setup_network.sh

      # Construção de tunel de comunicação entre Gateway e GatewayManager
        - name: Construção de tunel de comunicação entre Gateway e GatewayManager
          shell:  |
              ovs-vsctl add-port br-data vxlan_data -- set Interface vxlan_data type=gre options:remote_ip={{ ip_gateway_manager }}
              ovs-vsctl add-port br-control vxlan_control -- set Interface vxlan_control type=vxlan options:remote_ip={{ ip_gateway_manager }}
      

       # Transfere código do orquestrador GW
        - name: Transfere código do Orquestrador GW
          copy: src=SOFTWAY4IoT-Orch-gw/ dest=/etc/{{ DIR_INSTALL_SOFTWAY }}/src/orch

      # Resquisição post p/ implentação do GatewayManager        
      #  - name: Habilitar Gateway
      #    shell:  |
      #        curl -d '{"id":" {{ number_gateway_controll }} ", "ip":" {{ ansible_default_ipv4.address }} "}' -H "Content-Type: application/json" -X POST https://{{ ip_gateway_manager }}:{{ FLESK_PORT_MANAGER }}{{ GATEWAY_URL_REGISTER }}
              
      
      
         